// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using videogames.Data;

#nullable disable

namespace videogames.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("videogames.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Primer juego de la saga The Legend of Zelda",
                            Name = "The legend of Zelda ",
                            Price = 20,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 2,
                            Description = "Secuela de Zelda Breath of the Wild",
                            Name = "Zelda: Tears of the Kingdom ",
                            Price = 60,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 3,
                            Description = "Juego de Mario 3D",
                            Name = "Super Mario Oddisey ",
                            Price = 50,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 4,
                            Description = "Pokemon edición Españita",
                            Name = "Pokemon Púrpura ",
                            Price = 40,
                            Quantity = 25
                        },
                        new
                        {
                            Id = 5,
                            Description = "Dora la Exploradora vuelve para switch",
                            Name = "El juego de Dora Exploradora ",
                            Price = 10,
                            Quantity = 15
                        });
                });

            modelBuilder.Entity("videogames.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Role")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SignUpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "admin",
                            Role = true,
                            SignUpDate = new DateTime(2023, 5, 12, 12, 20, 59, 55, DateTimeKind.Local).AddTicks(5683),
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "edu12345",
                            Role = false,
                            SignUpDate = new DateTime(2023, 5, 12, 12, 20, 59, 55, DateTimeKind.Local).AddTicks(5718),
                            Username = "edu"
                        });
                });

            modelBuilder.Entity("videogames.Models.UserGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGame");
                });

            modelBuilder.Entity("videogames.Models.UserGame", b =>
                {
                    b.HasOne("videogames.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("videogames.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
